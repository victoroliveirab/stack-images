(()=>{"use strict";const t=(t,i)=>{const a=t.x,e=t.y,s=t.x+t.image.width,n=t.y+t.image.height,h=i.x,d=i.y,o=i.x+i.image.width,m=i.y+i.image.height;return a===h&&e===d||!(a>o||h>s)&&!(n>d||m>e)},i=(t,i=0,a=t)=>t<=i?i:t>=a?a:t,a=new class{constructor(){document.onpaste=this.clipboardEventListener.bind(this)}set callback(t){this._callback=t}clipboardEventListener(t){var i;const a=this.getFileFromClipboard(null===(i=t.clipboardData)||void 0===i?void 0:i.items);a&&(this._callback||console.warn("No ClipboardHandler callback registered"),((t=".")=>new Promise(((i,a)=>{const e=new Image;e.src=t,e.onload=()=>i(e),e.onerror=()=>a(`Image ${t} not found`)})))(URL.createObjectURL(a)).then(this._callback))}getFileFromClipboard(t){var i;return null===(i=Array.from(t||[]).find((({kind:t})=>"file"===t)))||void 0===i?void 0:i.getAsFile()}},e=document.getElementById("mode"),s=document.getElementById("paste-right"),n=document.getElementById("paste-below"),h=new class{constructor({limitWidth:t=!1,maxWidth:i=0}={}){this.canvas=document.getElementById("canvas"),this.ctx=this.canvas.getContext("2d"),this.imgs=[],this._limitWidth=t,this._maxWidth=t?i:0,this.pointsOfInterest=[],this.canvas.width=0,this.canvas.height=0,this.ctx.globalCompositeOperation="destination-over",this.addImage=this.addImage.bind(this)}get numberOfImgs(){return this.imgs.length}get maxWidth(){return this._maxWidth}set maxWidth(t){if(t<=0)return this._maxWidth=0,void(this._limitWidth=!1);this._maxWidth=t}get limitWidth(){return this._limitWidth}set limitWidth(t){this._limitWidth=t}addImage(t,i){if(i)if("below"===i)this.addImageBelow(t);else{if("right"!==i)throw new Error("Invalid image placement");this.addImageRight(t)}else this.addImageToBestFit(t);this.paint()}addImageToBestFit(i){for(const a of this.pointsOfInterest){let e=!1;const s={image:i,x:a.x,y:a.y};for(const i of this.imgs)if(e||(e=t(s,i)),e)break;if(!e&&this.imageFitsIntoCanvas(s))return this.putImageOnCanvas(i,a.x,a.y)}return this.addImageBelow(i)}addImageBelow(t){const[a,e]=this.getCanvasDimensions(),s=i(a,t.width),n=i(e+t.height,e);this.resizeCanvas(s,n),this.putImageOnCanvas(t,0,e)}addImageRight(t){const[a,e]=this.getCanvasDimensions(),s=i(a+t.width,a),n=i(e,t.height);this.resizeCanvas(s,n),this.putImageOnCanvas(t,a,0)}getCanvasDimensions(){return[this.canvas.width,this.canvas.height]}imageFitsIntoCanvas({image:{width:t},x:i}){return!this._limitWidth||i+t<=this._maxWidth}paint(){this.imgs.forEach((({image:t,x:i,y:a})=>this.ctx.drawImage(t,i,a)))}putImageOnCanvas(t,i,a){const e=i+t.width,s=a+t.height,n={x:e,y:a},h={x:i,y:s},d={x:e,y:s};this.imgs.push({image:t,x:i,y:a}),this.pointsOfInterest.push(n,h,d),this.resizeCanvasIfNeeded(e,s)}resizeCanvas(t=this.canvas.width,i=this.canvas.height){this._maxWidth=Math.max(this._maxWidth,this.canvas.width,t),this.canvas.width=t,this.canvas.height=i}resizeCanvasIfNeeded(t=0,i=0){const a=Math.max(this.canvas.width,t),e=Math.max(this.canvas.height,i);this.resizeCanvas(a,e)}}({limitWidth:!0,maxWidth:window.innerWidth});function d(){h.limitWidth=!0,h.maxWidth=window.innerWidth,a.callback=t=>h.addImage(t,"below"),o()}function o(){s.style.display="none",n.style.display="none"}a.callback=h.addImage,e.addEventListener("change",(()=>{const t=e.value;if("below"!==t)return"best-fit"===t?(h.limitWidth=!0,h.maxWidth=window.innerWidth,a.callback=h.addImage,void o()):"manual"===t?(h.limitWidth=!1,h.maxWidth=0,s.style.display="block",void(n.style.display="block")):"right"===t?(h.limitWidth=!1,h.maxWidth=0,a.callback=t=>h.addImage(t,"right"),void o()):void 0;d()})),window.onload=function(){d()}})();